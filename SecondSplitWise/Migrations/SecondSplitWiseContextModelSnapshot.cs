// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondSplitWise.DBContext;

namespace SecondSplitWise.Migrations
{
    [DbContext(typeof(SecondSplitWiseContext))]
    partial class SecondSplitWiseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecondSplitWise.Model.expense", b =>
                {
                    b.Property<int>("expenseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<int>("created_by");

                    b.Property<string>("expenseName");

                    b.Property<int?>("groupID");

                    b.Property<int>("paymentID");

                    b.HasKey("expenseID");

                    b.HasIndex("created_by");

                    b.HasIndex("groupID");

                    b.HasIndex("paymentID");

                    b.ToTable("expense");
                });

            modelBuilder.Entity("SecondSplitWise.Model.expense_member", b =>
                {
                    b.Property<int>("expenseMemberID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("commonmemberID");

                    b.Property<int?>("expenseID");

                    b.Property<decimal>("payableAmount");

                    b.HasKey("expenseMemberID");

                    b.HasIndex("commonmemberID");

                    b.HasIndex("expenseID");

                    b.ToTable("expense_member");
                });

            modelBuilder.Entity("SecondSplitWise.Model.friend", b =>
                {
                    b.Property<int>("friendID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FrienduserID");

                    b.Property<int>("fID");

                    b.Property<int>("userID");

                    b.HasKey("friendID");

                    b.HasIndex("FrienduserID");

                    b.HasIndex("userID");

                    b.ToTable("friend");
                });

            modelBuilder.Entity("SecondSplitWise.Model.group", b =>
                {
                    b.Property<int>("groupID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<int>("created_by");

                    b.Property<string>("group_name");

                    b.HasKey("groupID");

                    b.HasIndex("created_by");

                    b.ToTable("group");
                });

            modelBuilder.Entity("SecondSplitWise.Model.group_payer", b =>
                {
                    b.Property<int>("grouppayerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("expenseID");

                    b.Property<decimal>("paid_share");

                    b.Property<int>("user_expense_id");

                    b.HasKey("grouppayerID");

                    b.ToTable("group_payer");
                });

            modelBuilder.Entity("SecondSplitWise.Model.group_transactions", b =>
                {
                    b.Property<int>("grouptransactionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<int?>("groupID");

                    b.Property<int?>("grouptransPayerID");

                    b.Property<int?>("grouptransReceiverID");

                    b.Property<decimal>("paid_share");

                    b.HasKey("grouptransactionID");

                    b.HasIndex("groupID");

                    b.HasIndex("grouptransPayerID");

                    b.HasIndex("grouptransReceiverID");

                    b.ToTable("group_transaction");
                });

            modelBuilder.Entity("SecondSplitWise.Model.members", b =>
                {
                    b.Property<int>("membersID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("groupID");

                    b.Property<int?>("userID");

                    b.HasKey("membersID");

                    b.HasIndex("groupID");

                    b.HasIndex("userID");

                    b.ToTable("member");
                });

            modelBuilder.Entity("SecondSplitWise.Model.payment", b =>
                {
                    b.Property<int>("paymentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("commonmemberID");

                    b.Property<int?>("groupID");

                    b.Property<int?>("payerID");

                    b.Property<decimal>("payment_amount");

                    b.HasKey("paymentID");

                    b.HasIndex("commonmemberID");

                    b.HasIndex("groupID");

                    b.HasIndex("payerID");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("SecondSplitWise.Model.single_payer", b =>
                {
                    b.Property<int>("singlepayerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("expenseID");

                    b.Property<decimal>("paid_share");

                    b.Property<int>("user_expense_id");

                    b.HasKey("singlepayerID");

                    b.ToTable("single_payer");
                });

            modelBuilder.Entity("SecondSplitWise.Model.user", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email");

                    b.Property<string>("first_name");

                    b.Property<string>("last_name");

                    b.Property<string>("password");

                    b.HasKey("userID");

                    b.ToTable("user");
                });

            modelBuilder.Entity("SecondSplitWise.Model.user_expense", b =>
                {
                    b.Property<int>("userexpenseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("expenseID");

                    b.Property<decimal>("paid_share");

                    b.Property<int?>("user_expense_id");

                    b.HasKey("userexpenseID");

                    b.HasIndex("expenseID");

                    b.HasIndex("user_expense_id");

                    b.ToTable("user_expense");
                });

            modelBuilder.Entity("SecondSplitWise.Model.expense", b =>
                {
                    b.HasOne("SecondSplitWise.Model.user", "user")
                        .WithMany("expenses")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SecondSplitWise.Model.group", "group")
                        .WithMany("expenses")
                        .HasForeignKey("groupID");

                    b.HasOne("SecondSplitWise.Model.payment", "payments")
                        .WithMany()
                        .HasForeignKey("paymentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecondSplitWise.Model.expense_member", b =>
                {
                    b.HasOne("SecondSplitWise.Model.user", "user")
                        .WithMany("expense_Members")
                        .HasForeignKey("commonmemberID");

                    b.HasOne("SecondSplitWise.Model.expense", "expense")
                        .WithMany("expense_Members")
                        .HasForeignKey("expenseID");
                });

            modelBuilder.Entity("SecondSplitWise.Model.friend", b =>
                {
                    b.HasOne("SecondSplitWise.Model.user", "Friend")
                        .WithMany("friends")
                        .HasForeignKey("FrienduserID");

                    b.HasOne("SecondSplitWise.Model.user", "user")
                        .WithMany("Users")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecondSplitWise.Model.group", b =>
                {
                    b.HasOne("SecondSplitWise.Model.user", "user")
                        .WithMany("groups")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecondSplitWise.Model.group_transactions", b =>
                {
                    b.HasOne("SecondSplitWise.Model.group", "groupsID")
                        .WithMany("Transactions")
                        .HasForeignKey("groupID");

                    b.HasOne("SecondSplitWise.Model.user", "grouptransPayer")
                        .WithMany("group_Transactions_Payer")
                        .HasForeignKey("grouptransPayerID");

                    b.HasOne("SecondSplitWise.Model.user", "grouptransReceiver")
                        .WithMany("group_Transactions_Receiver")
                        .HasForeignKey("grouptransReceiverID");
                });

            modelBuilder.Entity("SecondSplitWise.Model.members", b =>
                {
                    b.HasOne("SecondSplitWise.Model.group", "group")
                        .WithMany("members")
                        .HasForeignKey("groupID");

                    b.HasOne("SecondSplitWise.Model.user", "users")
                        .WithMany("members")
                        .HasForeignKey("userID");
                });

            modelBuilder.Entity("SecondSplitWise.Model.payment", b =>
                {
                    b.HasOne("SecondSplitWise.Model.user", "commonmember")
                        .WithMany("commonmembers")
                        .HasForeignKey("commonmemberID");

                    b.HasOne("SecondSplitWise.Model.group", "groupsID")
                        .WithMany("paymentdetails")
                        .HasForeignKey("groupID");

                    b.HasOne("SecondSplitWise.Model.user", "payer")
                        .WithMany("payers")
                        .HasForeignKey("payerID");
                });

            modelBuilder.Entity("SecondSplitWise.Model.user_expense", b =>
                {
                    b.HasOne("SecondSplitWise.Model.expense", "expense")
                        .WithMany("user_Expenses")
                        .HasForeignKey("expenseID");

                    b.HasOne("SecondSplitWise.Model.user", "users")
                        .WithMany("user_Expense_data")
                        .HasForeignKey("user_expense_id");
                });
#pragma warning restore 612, 618
        }
    }
}
